
set-option -gs history-limit 10000

set-option -gs prefix C-a
bind-key a send-prefix
bind-key C-a last-window

#set-option -gs prefix2 C-b
##unbind-key C-b
#bind-key b send-prefix -2
#bind-key C-b last-window


# White status line
set-option -g status-bg white

# Stop terminal clipboard sequence garbling screen
set-option set-clipboard off

# Automatic `move-window -r` on window close
set-option -gs renumber-windows on

# Screen-like bindings

bind-key | split-window -h -c "#{pane_current_path}"
bind-key S split-window -v -c "#{pane_current_path}"
bind-key A command-prompt -I "#W" "rename-window '%%'"

bind-key Tab select-pane -t :.+

bind-key Space next-window
bind-key BSpace previous-window

bind-key C-l refresh-client

bind-key '"' choose-window


# Copy-mode vim-like bindings
# https://github.com/tmux/tmux/issues/754
# https://github.com/tmux/tmux/issues/599
# https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58

bind-key -T copy-mode-vi Home send-keys -X start-of-line
bind-key -T copy-mode-vi End send-keys -X end-of-line

bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi v send-keys -X begin-selection

# mark word
#bind-key -t copy-mode-vi M-Enter previous-space ; begin-selection ; next-space
#bind-key M-Enter if-shell "#{?pane_in_mode,true,false}" 'send-keys BvE'

# Edit selected text in vim
## in new window
#bind-key -T copy-mode-vi y copy-pipe 'cat > ~/.tmux-clipboard$$; chmod 600 ~/.tmux-clipboard$$; tmux new-window "vim ~/.tmux-clipboard$$ ; rm ~/.tmux-clipboard$$"'
## in a pane
#bind-key -T copy-mode-vi y copy-pipe 'cat > ~/.tmux-clipboard$$; chmod 600 ~/.tmux-clipboard$$; tmux split-window -l 5 "vim ~/.tmux-clipboard$$ ; rm ~/.tmux-clipboard$$"'
## in a new pane, also go the the current folder
bind-key -T copy-mode-vi y send -X copy-pipe 'cat > ~/.tmux-clipboard$$; chmod 600 ~/.tmux-clipboard$$; tmux split-window -c "$(tmux display -p \#{pane_current_path})" -l 5 "vim ~/.tmux-clipboard$$ ; rm ~/.tmux-clipboard$$"'

# Bindings to save typing time

bind-key C-c new-window
bind-key C-d detach-client

bind-key C-c new-window -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

if-shell -F "#{have_tcl}" "tcl source ~/.tmux.tcl"

